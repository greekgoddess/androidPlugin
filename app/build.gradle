import ProjectVersion
apply plugin: 'com.android.application'
apply from: rootProject.getRootDir().getAbsolutePath() + "/utils.gradle"

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.plugin.demo"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            multiDexEnabled true
            buildConfigField("boolean", "BUILD_DEBUG", "true")
        }
//        demo {
//
//        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    compile project(':pluginsdk')
    compile 'org.robolectric:shadows-multidex:3.3.1'

}

task version {
    println "Task configuration"
    doLast {
        ProjectVersion vers = new ProjectVersion(66);
        println vers
    }
}

def printTaskOutputAndInput(String name) {
    def task = project.tasks.findByName(name)
    if (task) {

    }
}

project.afterEvaluate {
    def task = project.tasks.findByName("assembleDebug")
    task.doLast {
        println "app assembleDebug 执行完成"
        def path = rootProject.getRootDir()
        def oriFile = new File("$path/pluginsdk/build/intermediates/intermediate-jars/debug/classes.jar")
        def targetFile = new File("$path/pluginsdk/build/plugin-sdk.jar")
        targetFile.withOutputStream {
            os ->
                oriFile.withInputStream {
                    ins ->
                    os << ins
                }
        }
    }
}

println "app configuration"

def la = "你好"

task gTask (type: GGTask) {
    doLast {
        println la
    }
}

gradle.taskGraph.whenReady {
    if (it.hasTask(gTask)) {
        println "包含gTask"
    } else {
        println "不包含ttt"
    }
}

[1,2,3,4,5].each { println it}